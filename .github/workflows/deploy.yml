name: Deploy docker image

on:
  push:
    branches:
      - 'main'

jobs:

  build_docker_image:
    runs-on: ubuntu-18.04
    steps:

      - uses: actions/checkout@v2
      - name: set up JDK 15
        uses: actions/setup-java@v2
        with:
          java-version: '15'
          distribution: 'adopt'

      - name: Maven Package
        run: |
          mvn -B clean compile package -DskipTests -Ddockerfile.registry=${{ secrets.DOCKER_REGISTRY }}

      - name: set global env
        id: global_env
        run: |
          echo "::set-output name=REPOSITORY_OWNER_LC::${GITHUB_REPOSITORY_OWNER,,}"
          echo "::set-output name=IMAGE_NAME::${GITHUB_REPOSITORY#*/}"
          echo "::set-output name=DOCKERHUB_IMAGE_NAME::gb64/${GITHUB_REPOSITORY_OWNER,,}/${GITHUB_REPOSITORY#*/}"

      - name: create env file
        run: |
          touch ./target/.env
          echo REGISTRY=${{ secrets.DOCKER_REGISTRY }} >> ./target/.env

      - name: Build and tag image
        run: |
          docker build -t "${{ steps.global_env.outputs.DOCKERHUB_IMAGE_NAME }}:latest" -t "${{ steps.global_env.outputs.DOCKERHUB_IMAGE_NAME }}:${GITHUB_SHA::8}" ./target

      - name: Docker login
        run: docker login gb64 -u ${{ secrets.DOCKER_HUB_USERNAME }} -p ${{ secrets.DOCKER_HUB_PASSWORD }}

      - name: Publish image
        env:
          IMAGE_NAME: $GITHUB_REPOSITORY
        run: docker push "gb64/REPOSITORY_OWNER_LC/${{ steps.global_env.outputs.IMAGE_NAME }}"
